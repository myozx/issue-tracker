{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://issue-tracker-ui/./browser/App.jsx","webpack://issue-tracker-ui/./src/About.jsx","webpack://issue-tracker-ui/./src/Contents.jsx","webpack://issue-tracker-ui/./src/DateInput.jsx","webpack://issue-tracker-ui/./src/IssueAddNavItem.jsx","webpack://issue-tracker-ui/./src/IssueDetail.jsx","webpack://issue-tracker-ui/./src/IssueEdit.jsx","webpack://issue-tracker-ui/./src/IssueFilter.jsx","webpack://issue-tracker-ui/./src/IssueList.jsx","webpack://issue-tracker-ui/./src/IssueReport.jsx","webpack://issue-tracker-ui/./src/IssueTable.jsx","webpack://issue-tracker-ui/./src/NavBar.jsx","webpack://issue-tracker-ui/./src/NotFound.jsx","webpack://issue-tracker-ui/./src/NumInput.jsx","webpack://issue-tracker-ui/./src/Page.jsx","webpack://issue-tracker-ui/./src/Search.jsx","webpack://issue-tracker-ui/./src/SignInNavItem.jsx","webpack://issue-tracker-ui/./src/TextInput.jsx","webpack://issue-tracker-ui/./src/Toast.jsx","webpack://issue-tracker-ui/./src/UserContext.js","webpack://issue-tracker-ui/./src/color.js","webpack://issue-tracker-ui/./src/graphQLFetch.js","webpack://issue-tracker-ui/./src/routes.js","webpack://issue-tracker-ui/./src/store.js","webpack://issue-tracker-ui/./src/withToast.jsx","webpack://issue-tracker-ui/webpack/bootstrap","webpack://issue-tracker-ui/webpack/runtime/chunk loaded","webpack://issue-tracker-ui/webpack/runtime/compat get default export","webpack://issue-tracker-ui/webpack/runtime/define property getters","webpack://issue-tracker-ui/webpack/runtime/global","webpack://issue-tracker-ui/webpack/runtime/hasOwnProperty shorthand","webpack://issue-tracker-ui/webpack/runtime/make namespace object","webpack://issue-tracker-ui/webpack/runtime/jsonp chunk loading","webpack://issue-tracker-ui/webpack/before-startup","webpack://issue-tracker-ui/webpack/startup","webpack://issue-tracker-ui/webpack/after-startup"],"sourcesContent":["/* eslint \"react/react-in-jsx-scope\": \"off\" */\n/* eslint \"react/jsx-no-undef\": \"off\" */\n\nimport 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from '../src/store.js';\nimport Page from '../src/Page.jsx';\n\n// save the data sent by the uiserver along with server-rendered\n// html in the global store object.\n// eslint-disable-next-line no-underscore-dangle\nstore.initialData = window.__INITIAL_DATA__;\n// eslint-disable-next-line no-underscore-dangle\nstore.userData = window.__USER_DATA__;\n\nconst element = (\n  <Router>\n    <Page />\n  </Router>\n);\n\n// hydrate only adds event handlers to the server-rendered document.\nReactDOM.hydrate(element, document.getElementById('contents'));\n\n// hot module replacement\nif (module.hot) {\n  module.hot.accept();\n}\n","import React from 'react';\nimport store from './store.js';\nimport graphQLFetch from './graphQLFetch.js';\n\nexport default class About extends React.Component {\n  static async fetchData() {\n    const data = graphQLFetch('query{about}');\n    return data;\n  }\n\n  constructor(props) {\n    super(props);\n    const apiAbout = store.initialData ? store.initialData.about : null;\n    delete store.initialData;\n\n    this.state = {\n      apiAbout,\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      apiAbout,\n    } = this.state;\n    if (apiAbout == null) {\n      const data = await About.fetchData();\n      this.setState({\n        apiAbout: data.about,\n      });\n    }\n  }\n\n  render() {\n    const {\n      apiAbout,\n    } = this.state;\n    return (\n      <div className=\"text-center\">\n        <h3>Issue Tracker Version 0.9</h3>\n        <h4>{apiAbout}</h4>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport routes from './routes.js';\n\n// contents of the pages below the naviagtion bar\nexport default function Contents() {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/issues\" />\n      {/* <Route path={} component={} /> */}\n      {routes.map(attrs => (\n        <Route {...attrs} key={attrs.path} />\n      ))}\n    </Switch>\n  );\n}\n","import React from 'react';\n\n// from Date to 'yyyy-mm-dd'\nfunction editFormat(date) {\n  return date === null ? '' : date.toISOString().substr(0, 10);\n}\n\n// from Date obj to 'Sat Feb 01 2021' str format\nfunction displayFormat(date) {\n  return date === null ? '' : date.toDateString();\n}\n\n// for validation, from 'yyyy-mm-dd' to Date obj or null\nfunction unformat(dateStr) {\n  const val = new Date(dateStr);\n  return Number.isNaN(val.getTime()) ? null : val;\n}\n\nexport default class DateInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: editFormat(props.value), focus: false, valid: true };\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  // handles changes in the input box\n  onChange(e) {\n    if (e.target.value.match(/^[\\d-]*$/)) {\n      this.setState({ value: e.target.value });\n    }\n  }\n\n  // executed when the user clicks the input box\n  onFocus() {\n    this.setState({ focus: true });\n  }\n\n  // executed when the input box get unfocused\n  onBlur(e) {\n    const { value, valid: oldValid } = this.state;\n    const { onValidityChange, onChange } = this.props;\n\n    const dateValue = unformat(value);\n\n    const valid = value === '' || dateValue != null;\n\n    if (valid !== oldValid && onValidityChange) {\n      onValidityChange(e, valid);\n    }\n\n    this.setState({ focus: false, valid });\n\n    if (valid) onChange(e, dateValue);\n  }\n\n  render() {\n    const { value, focus, valid } = this.state;\n    const { value: origValue, onValidityChange, ...props } = this.props;\n    const inputVal = !valid || focus ? value : displayFormat(origValue);\n\n    return (\n      <input\n        {...props}\n        value={inputVal}\n        placeholder={focus ? 'yyyy-mm-dd' : null}\n        onFocus={this.onFocus}\n        onBlur={this.onBlur}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n  NavItem,\n  Glyphicon,\n  Modal,\n  Form,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  Button,\n  ButtonToolbar,\n  Tooltip,\n  OverlayTrigger,\n} from 'react-bootstrap';\nimport graphQLFetch from './graphQLFetch.js';\nimport withToast from './withToast.jsx';\n\nclass IssueAddNavItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showing: false,\n    };\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  showModal() {\n    this.setState({ showing: true });\n  }\n\n  hideModal() {\n    this.setState({ showing: false });\n  }\n\n  async handleSubmit(e) {\n    /**\n     * Once the input form is submitted, it creats a new issue object\n     * using the values from the form and sends a issueAdd mutation\n     * request to the graphQL server. Then it navigates to the corresponding\n     * issue edit page to further add info to the new added issue.\n     */\n    e.preventDefault();\n    this.hideModal();\n    const form = document.forms.issueAdd;\n\n    const issue = {\n      owner: form.owner.value,\n      title: form.title.value,\n      due: new Date(new Date().getTime() + 1000 * 60 * 60 * 24 * 10),\n    };\n\n    const query = `mutation issueAdd($issue: IssueInputs!){\n       issueAdd(issue: $issue){\n        id\n       }\n    }`;\n\n    const { showError } = this.props;\n    const data = await graphQLFetch(query, { issue }, showError);\n    if (data) {\n      const { history } = this.props;\n      history.push(`/edit/${data.issueAdd.id}`);\n    }\n  }\n\n  render() {\n    const { showing } = this.state;\n    const { user: { signedIn } } = this.props;\n\n    return (\n      <React.Fragment>\n        {/* plus icon at the nav bar */}\n        <NavItem disabled={!signedIn} onClick={this.showModal}>\n          <OverlayTrigger\n            placement=\"left\"\n            delayShow={1000}\n            overlay={<Tooltip id=\"create-issue\">Create Issue</Tooltip>}\n          >\n            <Glyphicon glyph=\"plus\" />\n          </OverlayTrigger>\n        </NavItem>\n        {/* modal form where a new issue can be added */}\n        <Modal keyboard show={showing} onHide={this.hideModal}>\n          <Modal.Header closeButton>\n            <Modal.Title>Create Issue</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form name=\"issueAdd\">\n              <FormGroup>\n                <ControlLabel>Title</ControlLabel>\n                <FormControl name=\"title\" autoFocus />\n              </FormGroup>\n              <FormGroup>\n                <ControlLabel>Owner</ControlLabel>\n                <FormControl name=\"owner\" />\n              </FormGroup>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <ButtonToolbar>\n              <Button\n                type=\"button\"\n                bsStyle=\"primary\"\n                onClick={this.handleSubmit}\n              >\n                Submit\n              </Button>\n              <Button bsStyle=\"link\" onClick={this.hideModal}>\n                Cancel\n              </Button>\n            </ButtonToolbar>\n          </Modal.Footer>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withToast(withRouter(IssueAddNavItem));\n","import React from 'react';\n\nexport default function IssueDetail({ issue }) {\n  if (issue) {\n    return (\n      <div>\n        <h3>Description</h3>\n        <pre>{issue.description}</pre>\n      </div>\n    );\n  }\n  return null;\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  Col,\n  Panel,\n  Form,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  ButtonToolbar,\n  Button,\n  Alert,\n} from 'react-bootstrap';\nimport graphQLFetch from './graphQLFetch.js';\nimport NumInput from './NumInput.jsx';\nimport DateInput from './DateInput.jsx';\nimport TextInput from './TextInput.jsx';\nimport store from './store.js';\nimport withToast from './withToast.jsx';\nimport UserContext from './UserContext.js';\n\nclass IssueEdit extends React.Component {\n  static async fetchData(match, search, showError) {\n    /**\n     * Fetches an issue with a particular id from the graphQL api server\n     * Params - match: <Object> from react router\n     *          search: String from react router\n     *          showError: Func from ToastWrapper\n     */\n    const query = `query issue($id: Int!){\n            issue(id: $id){\n                id title status owner\n                effort created due description\n            }\n        }`;\n\n    const {\n      params: { id },\n    } = match;\n\n    const result = await graphQLFetch(query, { id: Number(id) }, showError);\n    return result;\n  }\n\n  constructor(props) {\n    super(props);\n\n    const issue = store.initialData ? store.initialData.issue : null;\n    delete store.initialData;\n\n    this.state = {\n      issue, // <Object>\n      invalidFields: {}, // the fields of invalid user inputs\n      showingValidation: false, // validation message at the end of the form\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onValidityChange = this.onValidityChange.bind(this);\n  }\n\n  componentDidMount() {\n    const { issue } = this.state;\n    if (issue == null) {\n      this.loadData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      match: {\n        params: { id: prevId },\n      },\n    } = prevProps;\n\n    const {\n      match: {\n        params: { id },\n      },\n    } = this.props;\n\n    if (prevId !== id) {\n      this.loadData();\n    }\n  }\n\n  // handles changes on the validity information of each of the input elements\n  onValidityChange(e, valid) {\n    const { name } = e.target;\n    this.setState((prevState) => {\n      const invalidFields = { ...prevState.invalidFields, [name]: !valid };\n      if (valid) delete invalidFields[name];\n      return { invalidFields };\n    });\n  }\n\n  // update the state.issue using the values from the user inputs\n  onChange(e, naturalValue) {\n    const { name, value: textValue } = e.target;\n\n    // if the input value with its true type is not passed, use the\n    // one with ordinary unconverted string input value from event object.\n    const value = naturalValue === undefined ? textValue : naturalValue;\n\n    this.setState(prevState => ({\n      issue: { ...prevState.issue, [name]: value },\n    }));\n  }\n\n  async handleSubmit(e) {\n    /**\n     * Submit the database with the new user input values in the form, by\n     * making a mutation request to the graphQL server.\n     * If there's any invalidFields left, terminate this method.\n     */\n    e.preventDefault();\n    this.showValidation();\n\n    const { issue, invalidFields } = this.state;\n\n    // check validity of inputs before updating\n    if (Object.keys(invalidFields).length !== 0) return;\n\n    const query = `mutation issueUpdate($id: Int!,\n                        $changes: IssueUpdateInputs!){\n                        issueUpdate(id: $id, changes: $changes){\n                            id title status owner\n                            effort created due description\n                        }\n                    }`;\n\n    const { id, created, ...changes } = issue;\n    const { showError, showSuccess } = this.props;\n\n    const data = await graphQLFetch(query, { id, changes }, showError);\n    if (data) {\n      this.setState({ issue: data.issueUpdate });\n      showSuccess('Updated issue successfully');\n    }\n  }\n\n  // load data from the graphql api server\n  async loadData() {\n    const { match, showError } = this.props;\n    const data = await IssueEdit.fetchData(match, null, showError);\n    this.setState({ issue: data ? data.issue : {}, invalidFields: {} });\n  }\n\n  showValidation() {\n    this.setState({ showingValidation: true });\n  }\n\n  dismissValidation() {\n    this.setState({ showingValidation: false });\n  }\n\n  render() {\n    const { issue } = this.state;\n    const user = this.context;\n    if (issue == null) return null;\n\n    // ----- check if the \"id\" exists when\n    // \"prev\" and next links are used at the bottom ------------\n\n    const {\n      issue: { id },\n    } = this.state;\n\n    const {\n      match: {\n        params: { id: propsId },\n      },\n    } = this.props;\n\n    if (id == null) {\n      if (propsId != null) {\n        return <h2>{`Issue with ID: ${propsId} not found.`}</h2>;\n      }\n      return null;\n    }\n\n    // --- create a validtion message based on the state of the component ----\n\n    const { invalidFields, showingValidation } = this.state;\n\n    let validationMessage;\n\n    if (Object.keys(invalidFields).length !== 0 && showingValidation) {\n      validationMessage = (\n        <Alert bsStyle=\"danger\" onDismiss={this.dismissValidation}>\n          Please correct invalid fields before submitting\n        </Alert>\n      );\n    }\n\n    // --------- ui presentation -----------------\n\n    return (\n      <Panel>\n        <Panel.Heading>\n          <Panel.Title>{`Editing issue: ${id}`}</Panel.Title>\n        </Panel.Heading>\n        <Panel.Body>\n          {/* horizontal form to edit an issue */}\n          <Form horizontal onSubmit={this.handleSubmit}>\n            {/* created form field */}\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Created\n              </Col>\n              <Col sm={9}>\n                <FormControl.Static>\n                  {issue.created.toDateString()}\n                </FormControl.Static>\n              </Col>\n            </FormGroup>\n            {/* status form field */}\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Status\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass=\"select\"\n                  name=\"status\"\n                  value={issue.status}\n                  onChange={this.onChange}\n                >\n                  <option value=\"New\">New</option>\n                  <option value=\"Assigned\">Assigned</option>\n                  <option value=\"Fixed\">Fixed</option>\n                  <option value=\"Closed\">Closed</option>\n                </FormControl>\n              </Col>\n            </FormGroup>\n            {/* owner form field */}\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Owner\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  name=\"owner\"\n                  value={issue.owner}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            {/* effort form field */}\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Effort\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={NumInput}\n                  name=\"effort\"\n                  value={issue.effort}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            {/* due date form field */}\n            <FormGroup validationState={invalidFields.due ? 'error' : null}>\n              <Col componentClass={ControlLabel} sm={3}>\n                Due\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={DateInput}\n                  onValidityChange={this.onValidityChange}\n                  name=\"due\"\n                  value={issue.due}\n                  onChange={this.onChange}\n                  key={id}\n                />\n                <FormControl.Feedback />\n              </Col>\n            </FormGroup>\n            {/* title form field */}\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Title\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  size={50}\n                  name=\"title\"\n                  value={issue.title}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            {/* issue description form field */}\n            <FormGroup>\n              <Col componentClass={ControlLabel} sm={3}>\n                Description\n              </Col>\n              <Col sm={9}>\n                <FormControl\n                  componentClass={TextInput}\n                  tag=\"textarea\"\n                  rows={4}\n                  cols={50}\n                  name=\"description\"\n                  value={issue.description}\n                  onChange={this.onChange}\n                  key={id}\n                />\n              </Col>\n            </FormGroup>\n            {/* submit button */}\n            <FormGroup>\n              <Col smOffset={3} sm={6}>\n                <ButtonToolbar>\n                  <Button\n                    disabled={!user.signedIn}\n                    bsStyle=\"primary\"\n                    type=\"submit\"\n                  >\n                    Submit\n                  </Button>\n                  <LinkContainer to=\"/issues\">\n                    <Button bsStyle=\"link\">Back</Button>\n                  </LinkContainer>\n                </ButtonToolbar>\n              </Col>\n            </FormGroup>\n            {/* form inputs validation message */}\n            <FormGroup>\n              <Col smOffset={3} sm={9}>\n                {validationMessage}\n              </Col>\n            </FormGroup>\n          </Form>\n        </Panel.Body>\n        {/* prev and next page */}\n        <Panel.Footer>\n          <Link to={`/edit/${id - 1}`}>Prev</Link>\n          {' | '}\n          <Link to={`/edit/${id + 1}`}>Next</Link>\n        </Panel.Footer>\n      </Panel>\n    );\n  }\n}\n\nIssueEdit.contextType = UserContext;\nconst IssueEditWithToast = withToast(IssueEdit);\nIssueEditWithToast.fetchData = IssueEdit.fetchData;\n\nexport default IssueEditWithToast;\n","import React from 'react';\nimport {\n  Button,\n  ButtonToolbar,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  InputGroup,\n  Row,\n  Col,\n} from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport 'url-search-params-polyfill';\n\nclass IssueFilter extends React.Component {\n  constructor({ location: { search } }) {\n    super();\n    const params = new URLSearchParams(search);\n    this.state = {\n      status: params.get('status') || '',\n      changed: false,\n      effortMin: params.get('effortMin') || '',\n      effortMax: params.get('effortMax') || '',\n    };\n\n    this.onChangeStatus = this.onChangeStatus.bind(this);\n    this.onChangeEffortMin = this.onChangeEffortMin.bind(this);\n    this.onChangeEffortMax = this.onChangeEffortMax.bind(this);\n    this.applyFilter = this.applyFilter.bind(this);\n    this.showOriginalFilter = this.showOriginalFilter.bind(this);\n  }\n\n  // handles changes on status input form\n  onChangeStatus(e) {\n    this.setState({ status: e.target.value, changed: true });\n  }\n\n  // handles changes on effortMin input form\n  onChangeEffortMin(e) {\n    const effortString = e.target.value;\n    if (effortString.match(/^\\d*$/)) {\n      this.setState({ effortMin: effortString, changed: true });\n    }\n  }\n\n  // handles changes on effortMax input form\n  onChangeEffortMax(e) {\n    const effortString = e.target.value;\n    if (effortString.match(/^\\d*$/)) {\n      this.setState({ effortMax: effortString, changed: true });\n    }\n  }\n\n  // resets the filter input form's state\n  showOriginalFilter() {\n    const {\n      location: { search },\n    } = this.props;\n\n    const params = new URLSearchParams(search);\n    this.setState({\n      status: params.get('status') || '',\n      effortMin: params.get('effortMin') || '',\n      effortMax: params.get('effortMax') || '',\n      changed: false,\n    });\n  }\n\n  applyFilter() {\n    const { status } = this.state;\n    const { effortMin, effortMax } = this.state;\n\n    const params = new URLSearchParams();\n    if (status) params.set('status', status);\n    if (effortMin) params.set('effortMin', effortMin);\n    if (effortMax) params.set('effortMax', effortMax);\n    // progmatic navigation\n    const { history, urlBase } = this.props;\n    history.push({\n      pathname: urlBase,\n      search: params.toString() ? `?${params.toString()}` : '',\n    });\n  }\n\n  render() {\n    const { status, changed } = this.state;\n    const { effortMin, effortMax } = this.state;\n\n    return (\n      <Row>\n        <Col xs={6} sm={4} md={3} lg={2}>\n          <FormGroup>\n            <ControlLabel>Status:</ControlLabel>\n            <FormControl\n              componentClass=\"select\"\n              value={status}\n              onChange={this.onChangeStatus}\n            >\n              <option value=\"\">(All issues)</option>\n              <option value=\"New\">New</option>\n              <option value=\"Assigned\">Assigned</option>\n              <option value=\"Fixed\">Fixed</option>\n              <option value=\"Closed\">Closed</option>\n            </FormControl>\n          </FormGroup>\n        </Col>\n        <Col xs={6} sm={4} md={3} lg={2}>\n          <FormGroup>\n            <ControlLabel>Effort between:</ControlLabel>\n            <InputGroup>\n              <FormControl\n                value={effortMin}\n                onChange={this.onChangeEffortMin}\n              />\n              <InputGroup.Addon>-</InputGroup.Addon>\n              <FormControl\n                value={effortMax}\n                onChange={this.onChangeEffortMax}\n              />\n            </InputGroup>\n          </FormGroup>\n        </Col>\n        <Col xs={6} sm={4} md={3} lg={2}>\n          <FormGroup>\n            <ControlLabel>&nbsp;</ControlLabel>\n            <ButtonToolbar>\n              <Button\n                bsStyle=\"primary\"\n                type=\"button\"\n                onClick={this.applyFilter}\n              >\n                Apply\n              </Button>\n              <Button\n                bsStyle=\"primary\"\n                type=\"button\"\n                onClick={this.showOriginalFilter}\n                disabled={!changed}\n              >\n                Reset\n              </Button>\n            </ButtonToolbar>\n          </FormGroup>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default withRouter(IssueFilter);\n","import React from 'react';\nimport styled from 'styled-components';\nimport 'url-search-params-polyfill';\nimport {\n  Panel,\n  Pagination,\n  Button,\n} from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport IssueFilter from './IssueFilter.jsx';\nimport IssueTable from './IssueTable.jsx';\nimport IssueDetail from './IssueDetail.jsx';\nimport graphQLFetch from './graphQLFetch.js';\nimport store from './store.js';\nimport withToast from './withToast.jsx';\n\n// number of pagination links in each section\nconst SECTION_SIZE = 5;\n\n// ------- PageLink Component --------------\n\nfunction PageLink({\n  params, page, activePage, children,\n}) {\n  /**\n   * It represents each pagination links\n   * Props - params: Object instance from URLSearchParams\n   *                 to create query parameter.\n   *       - page: Int, the corresponding page number.\n   *       - activePage: currently active page number from URL.\n   */\n  params.set('page', page);\n\n  // disable the element when the page number is zero which is invalid.\n  if (page === 0) return React.cloneElement(children, { disabled: true });\n\n  return (\n    <LinkContainer\n      isActive={() => page === activePage}\n      to={{ search: `?${params.toString()}` }}\n    >\n      {children}\n    </LinkContainer>\n  );\n}\n\n// -------- Issue List Component ------------------\n\nclass IssueList extends React.Component {\n  static async fetchData(match, search, showError) {\n    /**\n     * Static method to fetch list of issues from the graphql server.\n     * This serves an issue list page.\n     * Params - match: <Object> given by react router\n     *        - search: <String> query paramter by react router\n     *        - showError: <Func> method from ToastWrapper compoent\n     */\n\n    // ---- analyzing the URL using match and search props -----\n\n    const params = new URLSearchParams(search);\n\n    // vars <Object> serves as filter for graphQL query\n    const vars = { hasSelection: false, selectedId: 0 };\n\n    const { params: { id } } = match;\n    const idInt = parseInt(id, 10);\n\n    // if \"id\" is found in router parameter, update the vars obj.\n    if (!Number.isNaN(idInt)) {\n      vars.hasSelection = true;\n      vars.selectedId = idInt;\n    }\n\n    // analyze the query string and set it in the vars obj\n\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    let page = parseInt(params.get('page'), 10);\n    if (Number.isNaN(page)) page = 1;\n    vars.page = page;\n\n    // ----- make an async graphQL query to the API server ------\n\n    const query = `query issueList(\n                     $status: StatusType,\n                     $effortMin: Int,\n                     $effortMax: Int,\n                     $hasSelection: Boolean!,\n                     $selectedId: Int!,\n                     $page: Int\n                     ){\n                      issueList(\n                        status: $status,\n                        effortMin: $effortMin,\n                        effortMax: $effortMax,\n                        page: $page\n                        ){\n                          issues {\n                            id title\n                            status owner\n                            created effort due\n                          }\n                          pages\n                         }\n                      issue(id: $selectedId) @include (if: $hasSelection){\n                        id description\n                      }\n                    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor(props) {\n    super(props);\n    const initialData = store.initialData || { issueList: {} };\n    const { issueList: { issues, pages }, issue: selectedIssue } = initialData;\n\n    // once  the property is destructed, it can be deleted in the global store\n    delete store.initialData;\n\n    this.state = {\n      issues, // Array<Object>\n      pages, // Int\n      selectedIssue, // { [string]: any }\n      open: false,\n    };\n\n    this.closeIssue = this.closeIssue.bind(this);\n    this.deleteIssue = this.deleteIssue.bind(this);\n    this.togglePanel = this.togglePanel.bind(this);\n  }\n\n  componentDidMount() {\n    const { issues } = this.state;\n\n    // only fetch data if the component is navigated through\n    // browser-rendering. In server-side rendering, no need to\n    // load data since they're already pre-populated.\n    if (issues == null) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    // fetch data if there is a change in the URL paramters\n\n    // get the previous query string and route parameter \"id\"\n    const {\n      location: { search: prevSearch },\n      match: {\n        params: { id: prevId },\n      },\n    } = prevProps;\n\n    // get the current query string and route parameter \"id\"\n    const {\n      location: { search },\n      match: {\n        params: { id },\n      },\n    } = this.props;\n\n    // only load data if there's a difference\n    if (prevSearch !== search || prevId !== id) {\n      this.loadData();\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({});\n  }\n\n  togglePanel() {\n    this.setState((state) => {\n      const open = !state.open;\n      return { open };\n    });\n  }\n\n  // handler function for clicking on close issue btn in IssueRow\n  async closeIssue(index) {\n    /**\n     * Sends a close mutation request to the graphQL server.\n     * If the mutation is successful, show successful toast message\n     * and update the status of that particualar issue in state.issues.\n     * Params - index: Int (The index of the issue in state.issues array\n     *                      to be closed)\n     */\n    const { issues } = this.state;\n    const query = `mutation issueClose($id: Int!){\n                        issueUpdate(id: $id, changes: {status: Closed}){\n                            id title status owner\n                            effort created due description\n                        }\n                   }`;\n\n    const { showError } = this.props;\n    const data = await graphQLFetch(query, { id: issues[index].id }, showError);\n\n    if (data) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n        newList[index] = data.issueUpdate;\n        return { issues: newList };\n      });\n\n      const { showSuccess } = this.props;\n      showSuccess('Successfully closed the issue');\n    }\n  }\n\n  // handler function for clicking UNDO in Toast\n  async restoreIssue(id) {\n    /**\n     * Sends a restore mutation request to the graphQL server.\n     * If the mutation is successful, show successful toast message\n     * and fetch the data again.\n     * Params - id: Int (The id of the issue to be restored)\n     */\n    const query = `mutation issueRestore($id: Int!) {\n      issueRestore(id: $id)\n    }`;\n\n    const { showError, showSuccess } = this.props;\n\n    const data = await graphQLFetch(query, { id }, showError);\n    if (data) {\n      showSuccess(`Issue ${id} restored successfully.`);\n      this.loadData();\n    }\n  }\n\n  // handler func for clicking delete btn in IssueRow\n  async deleteIssue(index) {\n    /**\n     * Sends a mutation delete request to the graphQL server.\n     * If the mutation is successful, remove the deleted issue obj\n     * from state.issues.\n     * Params - index: Int (The index of the issue to be deleted from\n     *                      the state.issues array)\n     */\n    const query = `mutation issueDelete($id: Int!){\n                        issueDelete(id: $id)\n                    }`;\n\n    const { issues } = this.state;\n\n    const {\n      location: { pathname, search },\n      history,\n    } = this.props;\n\n    // destructuring the id field from issues[index]\n    const { id } = issues[index];\n    const { showError } = this.props;\n    const data = await graphQLFetch(query, { id: Number(id) }, showError);\n\n    // if the issue is successfully deleted in the database\n    if (data && data.issueDelete) {\n      this.setState((prevState) => {\n        const newList = [...prevState.issues];\n\n        // if the row is selected and the description is displayed,\n        // drop the \"id\" route parameter from the URL\n        if (pathname === `/issues/${id}`) {\n          history.push({ pathname: '/issues', search });\n        }\n\n        // remove the deleted issue from the list in state.\n        newList.splice(index, 1);\n        return { issues: newList };\n      });\n\n      const { showSuccess } = this.props;\n\n      // create a success toast with UNDO button to restore\n      // the deleted issue.\n      const undoMessage = (\n        <span>\n          {`Deleted issue ${id} successfully.`}\n          <Button bsStyle=\"link\" onClick={() => this.restoreIssue(id)}>\n            UNDO\n          </Button>\n        </span>\n      );\n      showSuccess(undoMessage);\n    } else {\n      this.loadData();\n    }\n  }\n\n  // fetch data for browser-rendering\n  async loadData() {\n    /**\n     * Fetches list of issues from the database via API call using\n     * the class's static method.\n     * Updates the state of the component.\n     */\n    const {\n      location: { search },\n      match,\n    } = this.props;\n\n    const { showError } = this.props;\n    const data = await IssueList.fetchData(match, search, showError);\n\n    if (data) {\n      this.setState({\n        issues: data.issueList.issues,\n        pages: data.issueList.pages,\n        selectedIssue: data.issue,\n      });\n    }\n  }\n\n  render() {\n    const { issues, open } = this.state;\n    if (issues == null) return null;\n\n    // -------- pagination logics and creating pagination links ----------\n\n    const { selectedIssue, pages } = this.state;\n    const { location: { search } } = this.props;\n\n    const params = new URLSearchParams(search);\n    let page = parseInt(params.get('page'), 10);\n\n    // if page is NaN, it signifies initial page load, where it should be\n    // set to 1.\n    if (Number.isNaN(page)) page = 1;\n\n    // startPage calculated from page. endPage, prevSection and\n    // nextSection calculated from startPage.\n    const startPage = Math.floor((page - 1) / SECTION_SIZE) * SECTION_SIZE + 1;\n    const endPage = startPage + SECTION_SIZE - 1;\n    const prevSection = startPage === 1 ? 0 : startPage - SECTION_SIZE;\n    const nextSection = endPage >= pages ? 0 : startPage + SECTION_SIZE;\n\n    const items = [];\n    // push each PageLink into items[] based on startPage and endPage\n    for (let i = startPage; i <= Math.min(endPage, pages); i += 1) {\n      params.set('page', i);\n      items.push((\n        <PageLink key={i} params={params} activePage={page} page={i}>\n          <Pagination.Item>{i}</Pagination.Item>\n        </PageLink>\n      ));\n    }\n\n    return (\n      <React.Fragment>\n        {/* Filter panel */}\n        <ContentWrap>\n          <Button onClick={this.togglePanel}>\n            Filter Issues\n          </Button>\n          {/* <br /> */}\n          <Panel\n            style={{ display: open ? 'block' : 'none' }}\n            expanded={open}\n            onToggle={this.togglePanel}\n            defaultExpanded\n          >\n            <Panel.Collapse>\n              <Panel.Body>\n                <IssueFilter urlBase=\"/issues\" />\n              </Panel.Body>\n            </Panel.Collapse>\n          </Panel>\n          <hr />\n          {/* table of issue list */}\n          <IssueTable\n            issues={issues}\n            closeIssue={this.closeIssue}\n            deleteIssue={this.deleteIssue}\n          />\n          {/* issue detail */}\n          <IssueDetail issue={selectedIssue} />\n          {/* pagination links */}\n          <PaginationWrap>\n            <Pagination className=\"paginationam\">\n              <PageLink params={params} page={prevSection}>\n                <Pagination.Item>{'<'}</Pagination.Item>\n              </PageLink>\n              {items}\n              <PageLink params={params} page={nextSection}>\n                <Pagination.Item>{'>'}</Pagination.Item>\n              </PageLink>\n            </Pagination>\n          </PaginationWrap>\n        </ContentWrap>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ContentWrap = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  }\n`;\n\nconst PaginationWrap = styled.div`\n  display: flex; \n  justify-content: center;\n  width: 100%;\n`;\n\nconst IssueListWithToast = withToast(IssueList);\nIssueListWithToast.fetchData = IssueList.fetchData;\n\nexport default IssueListWithToast;\n","import 'url-search-params-polyfill';\nimport { v4 as uuidv4 } from 'uuid';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Panel, Table } from 'react-bootstrap';\nimport graphQLFetch from './graphQLFetch.js';\nimport IssueFilter from './IssueFilter.jsx';\nimport store from './store.js';\nimport withToast from './withToast.jsx';\n\nconst statuses = ['New', 'Assigned', 'Fixed', 'Closed'];\n\nclass IssueReport extends React.Component {\n  static async fetchData(match, search, showError) {\n    const params = new URLSearchParams(search);\n    const vars = {};\n    if (params.get('status')) vars.status = params.get('status');\n\n    const effortMin = parseInt(params.get('effortMin'), 10);\n    if (!Number.isNaN(effortMin)) vars.effortMin = effortMin;\n\n    const effortMax = parseInt(params.get('effortMax'), 10);\n    if (!Number.isNaN(effortMax)) vars.effortMax = effortMax;\n\n    const query = `query issueCounts(\n                    $status: StatusType, \n                    $effortMin: Int, \n                    $effortMax: Int) {\n                      issueCounts(\n                        status: $status,\n                        effortMin: $effortMin,\n                        effortMax: $effortMax\n                      ) {\n                        owner New Assigned Fixed Closed\n                      }\n                    }`;\n\n    const data = await graphQLFetch(query, vars, showError);\n    return data;\n  }\n\n  constructor(props) {\n    super(props);\n    const stats = store.initialData ? store.initialData.issueCounts : null;\n    delete store.initialData;\n    this.state = { stats };\n  }\n\n  componentDidMount() {\n    const { stats } = this.state;\n    if (stats === null) this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { location: { search: prevSearch } } = prevProps;\n    const { location: { search } } = this.props;\n\n    if (prevSearch !== search) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const { showError } = this.props;\n    const { location: { search }, match } = this.props;\n\n    const result = await IssueReport.fetchData(match, search, showError);\n    this.setState({ stats: result ? result.issueCounts : [] });\n  }\n\n  render() {\n    const { stats } = this.state;\n    if (stats === null) return null;\n\n    const headerColumns = (\n      statuses.map(status => (\n        <th className=\"axHead\" key={status}>{status}</th>\n      ))\n    );\n\n    const statRows = stats.map(counts => (\n      <tr key={counts.owner}>\n        <td className=\"rcell\">{counts.owner}</td>\n        {statuses.map(status => (\n          <td className=\"rcell\" key={uuidv4()}>\n            {counts[status] ? counts[status] : 0}\n          </td>\n        ))}\n      </tr>\n    ));\n\n    return (\n      <>\n        <ContentWrap>\n          <Panel>\n            <Panel.Heading>\n              <Panel.Title toggle>Filter</Panel.Title>\n            </Panel.Heading>\n            <Panel.Body collapsible>\n              <IssueFilter urlBase=\"/report\" />\n            </Panel.Body>\n          </Panel>\n          <TableWrap>\n            <StyledTable condensed responsive>\n              <thead>\n                <tr className=\"axHeadRow\">\n                  <th className=\"axHead\">User \\ Status</th>\n                  {headerColumns}\n                </tr>\n              </thead>\n              <tbody>\n                {statRows}\n              </tbody>\n            </StyledTable>\n          </TableWrap>\n        </ContentWrap>\n      </>\n    );\n  }\n}\n\nconst ContentWrap = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  }\n`;\n\nconst TableWrap = styled.div`\n  border: 0.5px solid #d6d6d6;\n  border-radius: 1rem;\n  padding: 1.5rem;\n  margin: 0 auto;\n`;\n\nconst StyledTable = styled(Table)`\n  margin-bottom: 0px;\n\n  .axHeadRow {\n    cursor: initial;\n  }\n\n  .axHead {\n    text-align: center;\n    font-size: 1.4rem;\n    border-bottom: transparent;\n  }\n\n  .rcell {\n    text-align: center;\n    border-top: 0.5px solid #e3e3e3;\n    color: #383b4a;\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n  }\n`;\n\nconst IssueReportWithToast = withToast(IssueReport);\nIssueReportWithToast.fetchData = IssueReport.fetchData;\nexport default IssueReportWithToast;\n","import React from 'react';\nimport {\n  Button,\n  Glyphicon,\n  Tooltip,\n  OverlayTrigger,\n  Table,\n} from 'react-bootstrap';\nimport styled from 'styled-components';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport UserContext from './UserContext.js';\nimport colors from './color.js';\n\n// -------- Issue Row Component ---------------\n\nclass IssueRowPlain extends React.Component {\n  /**\n    * const IssueRow = withRouter((props) => {...});\n    * Represents each row of issue in a IssueTable.\n    * Props: issue: {[string]: any}, search: String\n    *        closeIssue: Func(index), index: Int\n    *        deleteIssue: Func(index)\n    * Parent: IssueTable\n    */\n\n  // handles the event of click on close issue button in each row\n  onClose(e) {\n    e.preventDefault();\n    const { closeIssue, index } = this.props;\n    closeIssue(index);\n  }\n\n  // handles the event of click on delete issue button in each row\n  onDelete(e) {\n    e.preventDefault();\n    const { deleteIssue, index } = this.props;\n    deleteIssue(index);\n  }\n\n  render() {\n    const {\n      issue,\n      location: { search },\n    } = this.props;\n\n    const user = this.context;\n\n    // tooltip elements to be used in OverLay\n    const closeTooltip = <Tooltip id=\"close-tooltip\">Close Issue</Tooltip>;\n    const deleteTooltip = <Tooltip id=\"delete-tooltip\">Delete Issue</Tooltip>;\n    const editTooltip = <Tooltip id=\"edit-tooltip\">Edit Issue</Tooltip>;\n\n    const tableRow = (\n      <tr>\n        <td className=\"cell\">{issue.id}</td>\n        <td className=\"cell\">\n          <StatusWrapper\n            color={colors.status[issue.status]}\n          >\n            {issue.status}\n          </StatusWrapper>\n        </td>\n        <td className=\"cell\">{issue.owner}</td>\n        <td className=\"cell\">{issue.created.toDateString()}</td>\n        <td className=\"cell\">{issue.effort}</td>\n        <td className=\"cell\">{issue.due ? issue.due.toDateString() : ' '}</td>\n        <td className=\"cell\">{issue.title}</td>\n        <td className=\"cell\">\n          <ActionFlex>\n            <LinkContainer to={`/edit/${issue.id}`}>\n              <OverlayTrigger delayShow={1000} overlay={editTooltip}>\n                <Button bsSize=\"xsmall\">\n                  <Glyphicon glyph=\"edit\" />\n                </Button>\n              </OverlayTrigger>\n            </LinkContainer>\n            <OverlayTrigger\n              delayShow={1000}\n              overlay={closeTooltip}\n              placement=\"top\"\n            >\n              <Button\n                disabled={!user.signedIn}\n                bsSize=\"xsmall\"\n                type=\"button\"\n                onClick={this.onClose}\n              >\n                <Glyphicon glyph=\"remove\" />\n              </Button>\n            </OverlayTrigger>\n            <OverlayTrigger\n              delayShow={1000}\n              overlay={deleteTooltip}\n              placement=\"top\"\n            >\n              <Button\n                disabled={!user.signedIn}\n                type=\"button\"\n                bsSize=\"xsmall\"\n                onClick={this.onDelete}\n              >\n                <Glyphicon glyph=\"trash\" />\n              </Button>\n            </OverlayTrigger>\n          </ActionFlex>\n        </td>\n      </tr>\n    );\n\n    const selectedLocation = { pathname: `/issues/${issue.id}`, search };\n\n    // each tableRow becomes a link to display description of each id\n    return <LinkContainer to={selectedLocation}>{tableRow}</LinkContainer>;\n  }\n}\n\n// this is due to the fact that the wrapped component IssueRow is a stateless\n// component based on the withRouter documentation. That's why you can't assign\n// to it. contextType is meant to be a static class method.\nIssueRowPlain.contextType = UserContext;\nconst IssueRow = withRouter(IssueRowPlain);\ndelete IssueRow.contextType;\n\n// --------- Issue Table Component -----------------\n\nexport default function IssueTable({ issues, closeIssue, deleteIssue }) {\n  /**\n   * Displays a list of issues in a table.\n   * Props: issues: Array<Objects>\n   *        closeIssue: Func\n   *        deleteIssue: Func\n   */\n\n  // map each issue object to IssueRow\n  const issueRows = issues.map((issue, index) => (\n    <IssueRow\n      key={issue.id}\n      issue={issue}\n      deleteIssue={deleteIssue}\n      closeIssue={closeIssue}\n      index={index}\n    />\n  ));\n\n  return (\n    <TableWrap>\n      <StyledTable\n        hover\n        responsive\n      >\n        <thead>\n          <tr className=\"amHeadRow\">\n            <th className=\"amHead\">ID</th>\n            <th className=\"amHead\">Status</th>\n            <th className=\"amHead\">Owner</th>\n            <th className=\"amHead\">Created</th>\n            <th className=\"amHead\">Effort</th>\n            <th className=\"amHead\">Due Date</th>\n            <th className=\"amHead\">Title</th>\n            <th className=\"amHead\">Action</th>\n          </tr>\n        </thead>\n        <tbody>{issueRows}</tbody>\n      </StyledTable>\n    </TableWrap>\n  );\n}\n\n// ---------------- styles --------------------\n\nconst TableWrap = styled.div`\n  border: 0.5px solid #d6d6d6;\n  border-radius: 1rem;\n  padding: 1.5rem;\n  margin: 0 auto;\n`;\n\nconst StyledTable = styled(Table)`\n  margin-bottom: 0px;\n\n  .amHeadRow {\n    cursor: initial;\n  }\n\n  .amHead {\n    text-align: center;\n    font-size: 1.4rem;\n    border-bottom: transparent;\n  }\n\n  .cell {\n    text-align: center;\n    border-top: 0.5px solid #e3e3e3;\n    color: #383b4a;\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n  }\n`;\n\nconst StatusWrapper = styled.div`\n  background-color: ${props => props.color};\n  padding-top: 0.5px;\n  padding-bottom: 0.5px;\n  border-radius: 0.5rem;\n  margin: 0 auto;\n`;\n\nconst ActionFlex = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n","import React from 'react';\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  NavDropdown,\n  MenuItem,\n  Col,\n  Glyphicon,\n} from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport styled from 'styled-components';\nimport IssueAddNavItem from './IssueAddNavItem.jsx';\nimport Search from './Search.jsx';\nimport SignInNavItem from './SignInNavItem.jsx';\n\nexport default function NavBar({ user, onUserChange }) {\n  return (\n    <StyledNavbar>\n      <Navbar.Header>\n        <Navbar.Brand>\n          <div style={{ display: 'flex' }}>\n            <img src=\"img/logo.png\" alt=\"logo\" width=\"20px\" height=\"20px\" />\n            <p style={{\n              color: 'white',\n              fontWeight: 'bold',\n              marginLeft: '8px',\n            }}\n            >\n              Issue Tracker\n            </p>\n          </div>\n        </Navbar.Brand>\n      </Navbar.Header>\n      <Nav>\n        <LinkContainer exact to=\"/\">\n          <NavItem>\n            Home\n          </NavItem>\n        </LinkContainer>\n        <LinkContainer to=\"/issues\">\n          <NavItem>\n            Issue List\n          </NavItem>\n        </LinkContainer>\n        <LinkContainer to=\"/report\">\n          <NavItem>\n            Report\n          </NavItem>\n        </LinkContainer>\n      </Nav>\n      <Col sm={4} md={5}>\n        <Navbar.Form>\n          <Search />\n        </Navbar.Form>\n      </Col>\n      <Nav pullRight>\n        <IssueAddNavItem user={user} />\n        <SignInNavItem user={user} onUserChange={onUserChange} />\n        <NavDropdown\n          id=\"user-dropdown\"\n          title={<Glyphicon glyph=\"option-vertical\" />}\n          noCaret\n        >\n          <MenuItem href=\"/about\">About</MenuItem>\n        </NavDropdown>\n      </Nav>\n    </StyledNavbar>\n  );\n}\n\nconst StyledNavbar = styled(Navbar)`\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  background-color: #383b4a;\n  border-radius: 0px;\n  border-color: transparent;\n  \n  /* for home button */\n  .navbar-nav>li>a, .navbar-nav>li>a:focus {\n    color: white;\n  }\n  \n  /* for sign in button */\n  .navbar-nav>li>a:hover {\n    color: white;\n    background-color: #474b5b;\n    border-radius: 7px;\n  }\n\n  /* ----- for about link ------ */\n  .navbar-nav>.open>a, .navbar-nav>.open>a:focus,\n  .navbar-nav>.open>a:hover {\n    color: white;\n    background-color: #474b5b;\n    border-radius: 7px;\n  }\n\n  /* ----- for navigation links ------ */\n  .navbar-nav>.active>a, .navbar-nav>.active>a:focus {\n    color: white;\n    font-weight: bold;\n    background-color: #383b4a;\n    text-decoration: underline;\n  }\n\n  .navbar-nav>.active>a:hover {\n    color: white;\n    background-color: #5b5e6f75;\n    border-radius: 7px;\n  }\n`;\n","import React from 'react';\n\nexport default function NotFound() {\n  return <h1>Page Not Found</h1>;\n}\n","import React from 'react';\n\n// from num to string\nfunction format(num) {\n  return num != null ? num.toString() : '';\n}\n\n// from string to num\nfunction unformat(str) {\n  const val = parseInt(str, 10);\n  return Number.isNaN(val) ? null : val;\n}\n\nexport default class NumInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: format(props.value) };\n    this.onBlur = this.onBlur.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    if (e.target.value.match(/^\\d*$/)) {\n      this.setState({ value: e.target.value });\n    }\n  }\n\n  // handle when the input looses focus\n  onBlur(e) {\n    const { onChange } = this.props;\n    const { value } = this.state;\n    onChange(e, unformat(value));\n  }\n\n  render() {\n    const { value } = this.state;\n    return (\n      <input\n        type=\"text\"\n        {...this.props}\n        value={value}\n        onBlur={this.onBlur}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Grid,\n} from 'react-bootstrap';\nimport Contents from './Contents.jsx';\nimport NavBar from './NavBar.jsx';\n// import Footer from './Footer.jsx';\nimport UserContext from './UserContext.js';\nimport graphQLFetch from './graphQLFetch.js';\nimport store from './store.js';\n\nexport default class Page extends React.Component {\n  static async fetchData(cookie) {\n    const query = 'query { user { username signedIn } }';\n    const data = await graphQLFetch(query, null, null, cookie);\n    return data;\n  }\n\n  constructor() {\n    super();\n    const user = store.userData ? store.userData.user : null;\n    delete store.userData;\n    this.state = { user };\n    this.onUserChange = this.onUserChange.bind(this);\n  }\n\n  async componentDidMount() {\n    const { user } = this.state;\n    if (user === null) {\n      const data = await Page.fetchData();\n      this.setState({ user: data.user });\n    }\n  }\n\n  onUserChange(user) {\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    if (user === null) return null;\n\n    return (\n      <div>\n        <NavBar user={user} onUserChange={this.onUserChange} />\n        <Grid fluid>\n          <UserContext.Provider value={user}>\n            <Contents />\n          </UserContext.Provider>\n        </Grid>\n        {/* <Footer /> */}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Glyphicon } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport AsyncSelect from 'react-select/async';\nimport graphQLFetch from './graphQLFetch.js';\nimport withToast from './withToast.jsx';\n\nconst colourStyles = {\n  control: styles => ({\n    ...styles,\n    backgroundColor: '#5b5e6f4a',\n    borderColor: '#666a77',\n    cursor: 'text',\n  }),\n  input: styles => ({\n    ...styles,\n    color: 'white',\n  }),\n  placeholder: styles => ({\n    ...styles,\n    color: '#adafb9',\n  }),\n};\n\nfunction PlaceholderComp() {\n  return (\n    <>\n      <Glyphicon glyph=\"search\" />\n      {'   '}\n      <span>Search for issues...</span>\n    </>\n  );\n}\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loadOptions = this.loadOptions.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // asynchronously load options from a remote server\n  async loadOptions(inputValue, callback) {\n    if (inputValue.length < 3) return [];\n    const query = `query issueList($search: String) {\n      issueList(search: $search) {\n        issues {\n          id title\n        }\n      }\n    }`;\n\n    const { showError } = this.props;\n    const data = await graphQLFetch(query, { search: inputValue }, showError);\n\n    // returns a list of options<Object> array. {label: \"\", value: \"\"}\n    const options = () => data.issueList.issues.map(issue => (\n      { label: `#${issue.id}: ${issue.title}`, value: issue.id }\n    ));\n\n    callback(options());\n    return undefined;\n  }\n\n  // handles when the AsyncSelect value is changed\n  // (when one of the options is selected).\n  handleChange(option) {\n    const { history } = this.props;\n    history.push({\n      pathname: `/edit/${option.value}`,\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <AsyncSelect\n          instanceId=\"search-select\"\n          value=\"\"\n          placeholder={<PlaceholderComp />}\n          onChange={this.handleChange}\n          loadOptions={this.loadOptions}\n          components={{ DropdownIndicator: null }}\n          styles={colourStyles}\n        />\n      </>\n    );\n  }\n}\n\nexport default withRouter(withToast(Search));\n","import React from 'react';\nimport fetch from 'isomorphic-fetch';\nimport {\n  Button,\n  ControlLabel,\n  Form,\n  FormControl,\n  FormGroup,\n  HelpBlock,\n  MenuItem,\n  Modal,\n  NavDropdown,\n  NavItem,\n} from 'react-bootstrap';\nimport withToast from './withToast.jsx';\n\nclass SignInNavItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pswd: '',\n      showingModal: false,\n      loginErrMsg: '',\n    };\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.signIn = this.signIn.bind(this);\n    this.signOut = this.signOut.bind(this);\n    this.validateUsername = this.validateUsername.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  showModal() {\n    this.setState({ showingModal: true });\n  }\n\n  hideModal() {\n    this.setState({ showingModal: false });\n  }\n\n  async signIn(e) {\n    e.preventDefault();\n    const { pswd } = this.state;\n    const { user: { username }, onUserChange } = this.props;\n    const { showSuccess } = this.props;\n\n    const authEndpoint = window.ENV.UI_AUTH_ENDPOINT;\n\n    try {\n      const response = await fetch(`${authEndpoint}/signin`, {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify({ username, pswd }),\n      });\n\n      const body = await response.text();\n      const credentials = JSON.parse(body);\n\n      onUserChange({ ...credentials });\n\n      this.hideModal();\n      showSuccess('Login Successful.');\n    } catch (error) {\n      this.setState({ loginErrMsg: 'Incorrect password!' });\n    }\n  }\n\n  async signOut() {\n    const { onUserChange } = this.props;\n    const authEndpoint = window.ENV.UI_AUTH_ENDPOINT;\n    await fetch(`${authEndpoint}/signout`, {\n      method: 'POST',\n      credentials: 'include',\n    });\n\n    onUserChange({ username: '', signedIn: false });\n  }\n\n  validateUsername() {\n    const { user: { username } } = this.props;\n    if (username) {\n      const len = username.length;\n      if (len > 3) return 'success';\n      if (len > 0) return 'error';\n    }\n    return null;\n  }\n\n  handleChange(e) {\n    const { onUserChange } = this.props;\n    if (e.target.name === 'username') {\n      onUserChange({ username: e.target.value, signedIn: false });\n    } else {\n      this.setState({ pswd: e.target.value });\n    }\n  }\n\n  render() {\n    const { user } = this.props;\n    const { pswd } = this.state;\n    if (user.signedIn) {\n      return (\n        <>\n          <NavDropdown title={user.username} id=\"user\">\n            <MenuItem onClick={this.signOut}>Sign out</MenuItem>\n          </NavDropdown>\n        </>\n      );\n    }\n\n    let signInDisable = true;\n    if (user.username && pswd) {\n      if (user.username.length > 3) {\n        signInDisable = false;\n      }\n    }\n\n    const { showingModal, loginErrMsg } = this.state;\n\n    return (\n      <>\n        <NavItem onClick={this.showModal}>\n          <span className=\"mgSignin\">Sign in</span>\n        </NavItem>\n        <Modal keyboard show={showingModal} onHide={this.hideModal} bsSize=\"sm\">\n          <Modal.Header closeButton>\n            <Modal.Title>Sign in</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form name=\"signIn\" onSubmit={this.signIn}>\n              {/* ------ sign in form username group ---------- */}\n              <FormGroup\n                controlId=\"formUsername\"\n                validationState={this.validateUsername()}\n              >\n                <ControlLabel>Username</ControlLabel>\n                <FormControl\n                  type=\"text\"\n                  name=\"username\"\n                  value={user.username || ''}\n                  onChange={this.handleChange}\n                />\n                <FormControl.Feedback />\n                <HelpBlock>\n                  More than three characters.\n                </HelpBlock>\n              </FormGroup>\n              {/* ------ sign in form password group ---------- */}\n              <FormGroup\n                controlId=\"formPassword\"\n              >\n                <ControlLabel>Password</ControlLabel>\n                <FormControl\n                  type=\"password\"\n                  name=\"pswd\"\n                  value={pswd}\n                  onChange={this.handleChange}\n                />\n                <FormControl.Feedback />\n                <HelpBlock>\n                  Password: superman\n                  <div style={{ color: '#f26b41' }}>{loginErrMsg}</div>\n                </HelpBlock>\n              </FormGroup>\n              {/* ------- Sign-in block button -------------- */}\n              <Button\n                block\n                type=\"submit\"\n                bsStyle=\"primary\"\n                onClick={this.signIn}\n                disabled={signInDisable}\n              >\n                Sign In\n              </Button>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button bsStyle=\"link\" onClick={this.hideModal}>Cancel</Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default withToast(SignInNavItem);\n","import React from 'react';\n\nfunction format(text) {\n  return text != null ? text : '';\n}\n\nfunction unformat(text) {\n  return text.trim().length === 0 ? null : text;\n}\n\nexport default class TextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: format(props.value) };\n    this.onBlur = this.onBlur.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  onBlur(e) {\n    const { onChange } = this.props;\n    const { value } = this.state;\n    onChange(e, unformat(value));\n  }\n\n  render() {\n    const { value } = this.state;\n    const { tag = 'input', ...props } = this.props;\n    return React.createElement(tag, {\n      ...props,\n      value,\n      onBlur: this.onBlur,\n      onChange: this.onChange,\n    });\n  }\n}\n","import React from 'react';\nimport { Alert, Collapse } from 'react-bootstrap';\n\nexport default class Toast extends React.Component {\n  componentDidUpdate() {\n    const { showing, onDismiss } = this.props;\n    if (showing) {\n      this.dismissTimer = setTimeout(onDismiss, 3000);\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.dismissTimer);\n  }\n\n  render() {\n    const {\n      showing, bsStyle, onDismiss, children,\n    } = this.props;\n\n    return (\n      <Collapse in={showing}>\n        <div style={{\n          position: 'fixed',\n          bottom: 20,\n          left: 20,\n          zIndex: 10,\n        }}\n        >\n          <Alert bsStyle={bsStyle} onDismiss={onDismiss}>\n            {children}\n          </Alert>\n        </div>\n      </Collapse>\n    );\n  }\n}\n","import React from 'react';\n\nconst UserContext = React.createContext({ signedIn: false });\n\nexport default UserContext;\n","const colors = {\n  primary: '#282487',\n  status: {\n    New: '#ffe6b3',\n    Closed: '#ffc3b3',\n    Fixed: '#deffb3',\n    Assigned: '',\n  },\n};\n\nexport default colors;\n","import fetch from 'isomorphic-fetch';\n\n// JSON parser reviver function to parse date string as Date objects\nconst dateRegex = new RegExp('^\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d');\nfunction jsonDateReviver(_, value) {\n  if (dateRegex.test(value)) return new Date(value);\n  return value;\n}\n\nexport default async function graphQLFetch(\n  query,\n  variables = {},\n  showError = null,\n  cookie = null,\n) {\n  /**\n   * Fetches list of issues from the server.\n   * Displays errors based on the result.\n   * Returns the fetched issue list.\n   * Params - query: String, GraphQL query string,\n   *          variables: <Object>, GraphqQL query variables\n   *          showError: Func from Toast\n   */\n\n  // __isBrowser__ constant formed at Webpack bundling process\n  // eslint-disable-next-line no-undef\n  const apiEndpoint = __isBrowser__\n    ? window.ENV.UI_API_ENDPOINT\n    : process.env.UI_API_ENDPOINT;\n\n  try {\n    const headers = new Headers({\n      'Content-type': 'application/json',\n    });\n    if (cookie) headers.append('Cookie', cookie);\n    const response = await fetch(apiEndpoint, {\n      method: 'POST',\n      credentials: 'include',\n      headers,\n      body: JSON.stringify({\n        query,\n        variables,\n      }),\n    });\n\n    // to handle the Date, the response is parsed as json text\n    // rather than a json object, here body is a string of json data\n    // JSON.parse(JsonString, ...)\n    const body = await response.text();\n    const result = JSON.parse(body, jsonDateReviver);\n\n    if (result.errors) {\n      const error = result.errors[0];\n      if (error.extensions.code === 'BAD_USER_INPUT') {\n        const details = error.extensions.exception.errors.join('\\n ');\n        if (showError) showError(`${error.message}:\\n ${details}`);\n      } else if (showError) {\n        showError(`${error.extensions.code}: ${error.message}`);\n      }\n    }\n    return result.data;\n  } catch (e) {\n    // cathing the transport error\n    if (showError) showError(`Error in sending data to server: ${e.message}`);\n    return null;\n  }\n}\n","import IssueListWithToast from './IssueList.jsx';\nimport IssueReportWithToast from './IssueReport.jsx';\nimport IssueEditWithToast from './IssueEdit.jsx';\nimport About from './About.jsx';\nimport NotFound from './NotFound.jsx';\n\nconst routes = [\n  { path: '/issues/:id?', component: IssueListWithToast },\n  { path: '/edit/:id', component: IssueEditWithToast },\n  { path: '/report', component: IssueReportWithToast },\n  { path: '/about', component: About },\n  { path: '*', component: NotFound },\n];\n\nexport default routes;\n","const store = {};\n\nexport default store;\n","import React from 'react';\nimport Toast from './Toast.jsx';\n\nexport default function withToast(OriginalComponent) {\n  /**\n   * Wraps the OriginalComponent with a Toast.\n   * Holds the required logic for the Toast component\n   */\n  return class ToastWrapper extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        toastVisible: false,\n        toastMessage: '',\n        toastType: 'success',\n      };\n      this.showError = this.showError.bind(this);\n      this.showSuccess = this.showSuccess.bind(this);\n      this.dismissToast = this.dismissToast.bind(this);\n    }\n\n    showSuccess(message) {\n      this.setState({\n        toastVisible: true,\n        toastMessage: message,\n        toastType: 'success',\n      });\n    }\n\n    showError(message) {\n      this.setState({\n        toastVisible: true,\n        toastMessage: message,\n        toastType: 'danger',\n      });\n    }\n\n    dismissToast() {\n      this.setState({ toastVisible: false });\n    }\n\n    render() {\n      const { toastType, toastMessage, toastVisible } = this.state;\n      return (\n        <React.Fragment>\n          <OriginalComponent\n            showError={this.showError}\n            showSuccess={this.showSuccess}\n            {...this.props}\n          />\n          <Toast\n            bsStyle={toastType}\n            showing={toastVisible}\n            onDismiss={this.dismissToast}\n          >\n            {toastMessage}\n          </Toast>\n        </React.Fragment>\n      );\n    }\n  };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"app\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkissue_tracker_ui\"] = self[\"webpackChunkissue_tracker_ui\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendor\"], () => (__webpack_require__(\"./browser/App.jsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["React","ReactDOM","BrowserRouter","Router","store","Page","initialData","window","__INITIAL_DATA__","userData","__USER_DATA__","element","hydrate","document","getElementById","module","hot","accept","graphQLFetch","About","props","apiAbout","about","state","fetchData","data","setState","Component","Route","Switch","Redirect","routes","Contents","map","attrs","path","editFormat","date","toISOString","substr","displayFormat","toDateString","unformat","dateStr","val","Date","Number","isNaN","getTime","DateInput","value","focus","valid","onFocus","bind","onBlur","onChange","e","target","match","oldValid","onValidityChange","dateValue","origValue","inputVal","withRouter","NavItem","Glyphicon","Modal","Form","FormGroup","FormControl","ControlLabel","Button","ButtonToolbar","Tooltip","OverlayTrigger","withToast","IssueAddNavItem","showing","showModal","hideModal","handleSubmit","preventDefault","form","forms","issueAdd","issue","owner","title","due","query","showError","history","push","id","signedIn","user","IssueDetail","description","Link","LinkContainer","Col","Panel","Alert","NumInput","TextInput","UserContext","IssueEdit","invalidFields","showingValidation","loadData","prevProps","prevId","params","name","prevState","naturalValue","textValue","undefined","showValidation","Object","keys","length","created","changes","showSuccess","issueUpdate","context","propsId","validationMessage","dismissValidation","status","effort","search","result","contextType","IssueEditWithToast","InputGroup","Row","IssueFilter","location","URLSearchParams","get","changed","effortMin","effortMax","onChangeStatus","onChangeEffortMin","onChangeEffortMax","applyFilter","showOriginalFilter","effortString","set","urlBase","pathname","toString","styled","Pagination","IssueTable","SECTION_SIZE","PageLink","page","activePage","children","cloneElement","disabled","IssueList","issueList","issues","pages","selectedIssue","open","closeIssue","deleteIssue","togglePanel","prevSearch","index","newList","issueDelete","splice","undoMessage","restoreIssue","parseInt","startPage","Math","floor","endPage","prevSection","nextSection","items","i","min","display","vars","hasSelection","selectedId","idInt","ContentWrap","div","PaginationWrap","IssueListWithToast","v4","uuidv4","Table","statuses","IssueReport","stats","issueCounts","headerColumns","statRows","counts","TableWrap","StyledTable","IssueReportWithToast","colors","IssueRowPlain","closeTooltip","deleteTooltip","editTooltip","tableRow","onClose","onDelete","selectedLocation","IssueRow","issueRows","StatusWrapper","color","ActionFlex","Navbar","Nav","NavDropdown","MenuItem","Search","SignInNavItem","NavBar","onUserChange","fontWeight","marginLeft","StyledNavbar","NotFound","format","num","str","Grid","cookie","AsyncSelect","colourStyles","control","styles","backgroundColor","borderColor","cursor","input","placeholder","PlaceholderComp","loadOptions","handleChange","inputValue","callback","options","label","option","DropdownIndicator","fetch","HelpBlock","pswd","showingModal","loginErrMsg","signIn","signOut","validateUsername","username","authEndpoint","ENV","UI_AUTH_ENDPOINT","method","credentials","headers","body","JSON","stringify","response","text","parse","len","signInDisable","trim","tag","createElement","Collapse","Toast","onDismiss","dismissTimer","setTimeout","clearTimeout","bsStyle","position","bottom","left","zIndex","createContext","primary","New","Closed","Fixed","Assigned","dateRegex","RegExp","jsonDateReviver","_","test","variables","apiEndpoint","__isBrowser__","UI_API_ENDPOINT","process","env","Headers","append","errors","error","extensions","code","details","exception","join","message","component","OriginalComponent","toastVisible","toastMessage","toastType","dismissToast"],"sourceRoot":""}